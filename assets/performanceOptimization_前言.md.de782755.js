import{_ as e,c as t,o as i,a as r}from"./app.07171ad0.js";const f=JSON.parse('{"title":"前言","description":"","frontmatter":{},"headers":[],"relativePath":"performanceOptimization/前言.md"}'),a={name:"performanceOptimization/前言.md"},o=r('<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-hidden="true">#</a></h1><p>过去的一段时间，对前端性能优化的知识点，进行了全方位的学习，主要是在国内的前端社区掘金，以及国外的一个<a href="https://web.dev/explore/" target="_blank" rel="noreferrer">网站<code>web.dev</code></a>，但是，回过头看，得出了两个现象：</p><ul><li>知识点真tm的多，且杂</li><li>很难在脑中形成一个系统化的流程</li></ul><p>发现这几个月在性能优化上的学习，更多的就是把网上一些优秀的文章收集起来，可回过头，忘的一干二净。</p><p>有一天翻阅笔记，无意间看到之前我的导师，曾经在微信群里，分享了他对性能优化的观点，如下：</p><blockquote><p>在做系统性能优化时，最好先有一个规划，并且<strong>持续记录</strong>：</p><ul><li>系统遇到了什么问题？</li><li>是否有可靠的测量方法来衡量性能？</li><li>明确目前指标多少，期望指标多少？</li><li>业界常见的思路是什么，优缺点？</li><li>最终采用什么思路去做，为什么？</li><li>中间有没有遇到过特别的事情，特别的坑</li><li>最终结果如何，是否超过/低于预期，为什么</li><li>未来是否还可以做的更好</li></ul></blockquote><p>我把总结为下面几点：</p><p>记录现状 =&gt; 明确指标 =&gt; 优化措施 =&gt; 记录过程 =&gt; 输出实践结果 =&gt; 复盘</p><p>看完之后，很显然，之前的学习方法确实存在很大的误区，知识无限，学不完，要思考并形成一个清晰的体系，按照这个时间线，逐步记录、优化、实践、输出结果。也就是导师所提到的<strong>做事有始有终</strong>。</p>',9),l=[o];function n(p,_,s,c,d,h){return i(),t("div",null,l)}const u=e(a,[["render",n]]);export{f as __pageData,u as default};
