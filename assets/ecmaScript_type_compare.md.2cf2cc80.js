import{_ as s,c as n,o as a,a as l}from"./app.07171ad0.js";const F=JSON.parse('{"title":"显式类型转换和隐式类型转换","description":"","frontmatter":{"title":"显式类型转换和隐式类型转换","categories":"前端","date":"2019-07-03T20:59:11.000Z","tags":["JavaScript","Web","编程"]},"headers":[{"level":2,"title":"强(数据)类型语言","slug":"强-数据-类型语言","link":"#强-数据-类型语言","children":[]},{"level":2,"title":"弱(数据)类型语言","slug":"弱-数据-类型语言","link":"#弱-数据-类型语言","children":[]},{"level":2,"title":"Number()","slug":"number","link":"#number","children":[]},{"level":2,"title":"String()","slug":"string","link":"#string","children":[]},{"level":2,"title":"Boolean()","slug":"boolean","link":"#boolean","children":[{"level":3,"title":"valueOf()  返回该对象对应的原始值","slug":"valueof-返回该对象对应的原始值","link":"#valueof-返回该对象对应的原始值","children":[]},{"level":3,"title":"toString  返回对象的字符串的表现形式","slug":"tostring-返回对象的字符串的表现形式","link":"#tostring-返回对象的字符串的表现形式","children":[]},{"level":3,"title":"Number方法背后的原理","slug":"number方法背后的原理","link":"#number方法背后的原理","children":[]},{"level":3,"title":"String方法背后的原理","slug":"string方法背后的原理","link":"#string方法背后的原理","children":[]},{"level":3,"title":"==   两边发生的隐式转换","slug":"两边发生的隐式转换","link":"#两边发生的隐式转换","children":[]},{"level":3,"title":"逗号运算符","slug":"逗号运算符","link":"#逗号运算符","children":[]}]}],"relativePath":"ecmaScript/type_compare.md"}'),o={name:"ecmaScript/type_compare.md"},p=l(`<p>在学习JavaScript的一些总结和经验，供大家参考和学习，同时也欢迎大家参与讨论。</p><blockquote><p>先放一张图，可以看出来 <strong>弱类型</strong>、<strong>强类型</strong>、<strong>动态类型</strong>、<strong>静态类型</strong>语言的区别。</p></blockquote><p><img src="https://wexqza.bn.files.1drv.com/y4mQL6AoS1CYeIxtPNpnw3jlEPmy6Ltx1B8A7vhlBOesUSwO3TII0jucrz3a7znlns5xJtcuwBGmv5e-NozKXIbDyg6zTOLfObjIpMoysIg_rH93phsR7H9etobewRb3dP_-Ww_tA2JdFDxTXtqSQsCA-gj0UZJfdbudv39a3MpbkI209i5gO9kxUC8uL0jmUqpruD2Dy2i_IXU3KrcFULiyQ?width=500&amp;height=337&amp;cropmode=none" alt="弱类型、强类型、动态类型、静态类型语言的区别"></p><p><img src="https://weunyg.bn.files.1drv.com/y4mMmdhHEtw-pwVVBpSqH8w2hJ7cEJ1_aQxXCYl4v9PTlmjbOVqoxYXoEBuF1ttyfN7SOVkXiNmQN0xWCpDBfU9ylJJQRiRqPWD-efPir9uTqMu_hjJxE9jMlFwP3XZOcnH-jdWyJq8Dg_zmYTuOZ9kAXXoyTL8AHzHTyTFHWrcxgSucketorLh-xettRxtH7uvkmLdqhVww3Xi3hR93EhlZQ?width=1000&amp;height=810&amp;cropmode=none" alt="弱类型、强类型、动态类型、静态类型语言的区别"></p><h2 id="强-数据-类型语言" tabindex="-1">强(数据)类型语言 <a class="header-anchor" href="#强-数据-类型语言" aria-hidden="true">#</a></h2><p>定义：一旦一个变量被指定了某个数据类型，如果不经过强制转换，那么它就永远是这个数据类型了。比如你定义了一个整型变量a，那么我们不能将a当作字符串类型来处理处理。</p><h2 id="弱-数据-类型语言" tabindex="-1">弱(数据)类型语言 <a class="header-anchor" href="#弱-数据-类型语言" aria-hidden="true">#</a></h2><blockquote><p><strong>问题：</strong> 你描述一下为什么javascript是弱类型语言?</p></blockquote><h4 id="弱在哪里-体现在哪" tabindex="-1">弱在哪里？体现在哪？ <a class="header-anchor" href="#弱在哪里-体现在哪" aria-hidden="true">#</a></h4><p>JavaScript 声明变量的时候并没有预先确定的类型(只是用var声明)，变量的类型就是其值的类型，也就是说变量当前的类型由其值所决定。虽然弱类型的这种<strong>不需要预先确定类型</strong>的特性给我们带来了便利，同时也会给我们带来困扰。为了能充分利用该特性就必须掌握类型转换的原理。</p><blockquote><p>例子1：</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// a的值输出的是12，而这种情况在“强类型语言”中会报错的</span></span>
<span class="line"></span></code></pre></div><blockquote><p>例子2：我们var了一个a（它的类型由赋值等号后面的值决定），而在下面还可以对a进行随意修改</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> a)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// number</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> a)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// boolean</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">12</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> a)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// string</span></span>
<span class="line"></span></code></pre></div><p>等等等等。。。</p><h1 id="显式-强-类型转换" tabindex="-1">显式（强）类型转换 <a class="header-anchor" href="#显式-强-类型转换" aria-hidden="true">#</a></h1><h2 id="number" tabindex="-1">Number() <a class="header-anchor" href="#number" aria-hidden="true">#</a></h2><blockquote><p>先看一下例子：</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">//NaN</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//1</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">//0</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">12</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//12</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">012</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//12</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0xff90</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">//65424</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">5e5</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//500000</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">k</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//NaN</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">//NaN</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//NaN</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">([])</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">//0</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//0</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//2</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//2</span></span>
<span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//NaN</span></span>
<span class="line"></span></code></pre></div><p>从上面的例子我们可以得出<strong>Number</strong>运算符的<strong>转换规则</strong>：</p><ul><li>undefined 转换为 NaN</li><li>null 转换为 0</li><li>true 转换为 1，false 转换为 0</li><li>字符串 <ol><li>空格字符串转为0</li><li>非空字符串，并且内容为纯数字（包含进制与科学表示法）转成对应的数字</li><li>其余都是NaN，比如<code>Number(&#39;funcation(){}&#39;)或Number(&#39;AB&#39;)</code></li></ol></li><li>数字 转换为 数字本身</li><li>对象（引用类型） <ol><li><p>如果是对象{}、函数，则转换为 NaN</p></li><li><p>空数组 转换为 0，数组里<strong>只有一个数据</strong>并且这个<strong>数据能转成数字</strong>，则转成对应的数字，其它都转成NaN</p></li></ol></li></ul><h2 id="string" tabindex="-1">String() <a class="header-anchor" href="#string" aria-hidden="true">#</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//&#39;null&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">)        </span><span style="color:#676E95;font-style:italic;">// &#39;undefined&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)                </span><span style="color:#676E95;font-style:italic;">// &#39;1&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)               </span><span style="color:#676E95;font-style:italic;">// &#39;-1&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)                </span><span style="color:#676E95;font-style:italic;">// &#39;0&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)               </span><span style="color:#676E95;font-style:italic;">// &#39;0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">Infinity</span><span style="color:#A6ACCD;">)         </span><span style="color:#676E95;font-style:italic;">// &#39;Infinity&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-Infinity</span><span style="color:#A6ACCD;">)        </span><span style="color:#676E95;font-style:italic;">// &#39;-Infinity&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)             </span><span style="color:#676E95;font-style:italic;">// &#39;true&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 引用类型 */</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">]])</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// &#39;1,2&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">]])        </span><span style="color:#676E95;font-style:italic;">// &#39;1,2,3&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">koala</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">])      </span><span style="color:#676E95;font-style:italic;">// &#39;koala,1&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">	 </span><span style="color:#676E95;font-style:italic;">// &#39;function(){}&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">// &#39;[object Object]&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pow</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">))</span><span style="color:#676E95;font-style:italic;">// &#39;1e+30&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">()) </span><span style="color:#676E95;font-style:italic;">// &quot;Thu Jul 04 2019 10:07:58 GMT+0800 (中国标准时间)&quot;</span></span>
<span class="line"></span></code></pre></div><p>从上面的例子我们可以得出<strong>String</strong>运算符的<strong>转换规则</strong>：</p><ul><li>基本数据类型、null、undefined的结果就是给数据加上引号变成字符串</li><li>引用数据类型 <ol><li><p>如果是数组，结果为把所有<strong>中括号</strong>去掉，外面加个引号</p></li><li><p>如果是对象，结果为&#39;[object Object]&#39;（除了日期对象）</p></li><li><p>如果是函数，结果为在函数整体外面加个引号</p></li></ol></li></ul><h2 id="boolean" tabindex="-1">Boolean() <a class="header-anchor" href="#boolean" aria-hidden="true">#</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">) 		</span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">) 		    </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)		        </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">([]) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">!NaN</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre></div><p>从上面的例子我们可以得出<strong>Boolean</strong>运算符的<strong>转换规则</strong>：</p><p>除了下述 6 个值转换结果为 false，其他全部为 true：</p><ol><li><p>undefined</p></li><li><p>null</p></li><li><p>-0或0或+0</p></li><li><p>NaN</p></li><li><p>&#39;&#39;（空字符串）</p></li></ol><blockquote><p>在这讲一个额外的知识点<strong>Truthy</strong>：</p></blockquote><p>在 <a href="https://developer.mozilla.org/en-US/docs/Glossary/JavaScript" target="_blank" rel="noreferrer">JavaScript</a> 中，<strong>truthy</strong>（真值）指的是在<a href="https://developer.mozilla.org/en-US/docs/Glossary/Boolean" target="_blank" rel="noreferrer">布尔值</a>上下文中，转换后的值为真的值。所有值都是真值，除非它们被定义为 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy" target="_blank" rel="noreferrer">假值</a>（即除 <code>false</code>、<code>0</code>、<code>&quot;&quot;</code>、<code>null</code>、<code>undefined</code> 和 <code>NaN</code> 以外皆为真值）。</p><p>JavaScript 中的真值示例如下（将被转换为 true，<code>if</code> 后的代码段将被执行）：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> ([])</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">42</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">42</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">3.14</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">3.14</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">Infinity</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">-Infinity</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><blockquote><p>接下来<strong>重点</strong>来了，那他们三个转换背后的原理是什么？</p></blockquote><h1 id="转换背后的原理" tabindex="-1">转换背后的原理 <a class="header-anchor" href="#转换背后的原理" aria-hidden="true">#</a></h1><blockquote><p>在JavaScript中每一个对象都有一个valueOf()和toString()方法</p></blockquote><h3 id="valueof-返回该对象对应的原始值" tabindex="-1">valueOf() 返回该对象对应的原始值 <a class="header-anchor" href="#valueof-返回该对象对应的原始值" aria-hidden="true">#</a></h3><blockquote><p>JavaScript的许多内置对象（Array、Function、String、Boolean、Number）都<strong>重写</strong>了该函数，以实现更适合自身的功能需要。因此，不同类型对象的valueOf()方法的返回值和返回值类型均可能不同。</p></blockquote><table><thead><tr><th style="text-align:center;"><strong>对象</strong></th><th><strong>返回值</strong></th></tr></thead><tbody><tr><td style="text-align:center;">Array</td><td>返回数组对象本身。</td></tr><tr><td style="text-align:center;">Boolean</td><td>布尔值。</td></tr><tr><td style="text-align:center;">Date</td><td>存储的时间是从 1970 年 1 月 1 日午夜开始计的毫秒数 UTC。</td></tr><tr><td style="text-align:center;">Function</td><td>函数本身。</td></tr><tr><td style="text-align:center;">Number</td><td>数字值。</td></tr><tr><td style="text-align:center;">Object</td><td>对象本身。这是默认情况。</td></tr><tr><td style="text-align:center;">String</td><td>字符串值。</td></tr><tr><td style="text-align:center;"></td><td>Math 和 Error 对象没有 valueOf 方法。</td></tr></tbody></table><h3 id="tostring-返回对象的字符串的表现形式" tabindex="-1">toString 返回对象的字符串的表现形式 <a class="header-anchor" href="#tostring-返回对象的字符串的表现形式" aria-hidden="true">#</a></h3><blockquote><p>每个对象都有一个 toString() 方法，当对象被表示为文本值时或者当以期望字符串的方式引用对象时，该方法被自动调用。</p></blockquote><p>这里先记住，valueOf() 和 toString() 在特定的场合下会自行调用。</p><table><thead><tr><th style="text-align:center;"><strong>对象</strong></th><th style="text-align:left;"><strong>返回值</strong></th></tr></thead><tbody><tr><td style="text-align:center;">Number</td><td style="text-align:left;">数据转成字符串的形式 ，如： &#39;123&#39;</td></tr><tr><td style="text-align:center;">Boolean</td><td style="text-align:left;">数据转成字符串的形式 ，如： &#39;true&#39;、&#39;false&#39;</td></tr><tr><td style="text-align:center;">String</td><td style="text-align:left;">数据转成字符串的形式 ，如： &#39;jsldkfjsl&#39;</td></tr><tr><td style="text-align:center;">Function</td><td style="text-align:left;">在数据外面加了个引号 ，如： &#39;function foo(){}&#39;</td></tr><tr><td style="text-align:center;">Object</td><td style="text-align:left;">&quot;[object Object]&quot;</td></tr><tr><td style="text-align:center;">Date</td><td style="text-align:left;">&quot;Thu Jul 04 2019 11:53:31 GMT+0800 (中国标准时间)&quot; 当前时间</td></tr><tr><td style="text-align:center;">​</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="number方法背后的原理" tabindex="-1">Number方法背后的原理 <a class="header-anchor" href="#number方法背后的原理" aria-hidden="true">#</a></h3><blockquote><ol><li>调用对象的<strong>valueOf</strong>方法。如果返回原始类型的值，再使用<strong>Number</strong>函数，不再进行后续步骤。</li><li>如果<strong>valueOf</strong>方法返回的<strong>不是</strong>原始值，则调用<strong>toString</strong>方法。</li><li><strong>toString</strong>方法返回原始类型的值，则对该值使用<strong>Number</strong>函数，不再进行后续步骤。</li><li>如果<strong>toString</strong>方法后返回的依然<strong>不是</strong>原始值，就报错，抛出<code>TypeError </code>异常（一般不会出现）</li></ol></blockquote><h3 id="string方法背后的原理" tabindex="-1">String方法背后的原理 <a class="header-anchor" href="#string方法背后的原理" aria-hidden="true">#</a></h3><blockquote><ol><li>调用对象的<strong>toString</strong>方法。如果返回原始类型的值，再使用<strong>String</strong>函数，不再进行后续步骤。</li><li>如果<strong>toString</strong>方法返回的<strong>不是</strong>原始值，则调用<strong>valueOf</strong>方法。</li><li><strong>valueOf</strong>方法返回原始类型的值，则对该值使用<strong>String</strong>函数，不再进行后续步骤。</li><li>如果<strong>valueOf</strong>方法后返回的依然<strong>不是</strong>原始值，就报错，抛出<code>TypeError </code>异常（一般不会出现）</li></ol></blockquote><p><strong>注意：</strong><code>两者的调用顺序是相反的</code></p><h1 id="隐式类型转换" tabindex="-1">隐式类型转换 <a class="header-anchor" href="#隐式类型转换" aria-hidden="true">#</a></h1><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">隐式类型转换出现场景</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	1、不同类型的数据间运算、比较</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	2、对非布尔值类型的数据求布尔值</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	3、条件语句的括号里</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">隐式转数字出现的场景</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	1、数学运算符（+ - * / %），但是加号运算里不能出现字符串或对象类型数据</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    2、一元+-（正负操作符）后的数据</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    3、某些比较运算符</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    [] </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> 					</span><span style="color:#676E95;font-style:italic;">// &#39;[object, Object]&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 					</span><span style="color:#676E95;font-style:italic;">// &#39;[object, Object]&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    [] </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){},</span><span style="color:#A6ACCD;"> 			</span><span style="color:#676E95;font-style:italic;">// &quot;function(){}&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 					</span><span style="color:#676E95;font-style:italic;">// &#39;22,3&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){},</span><span style="color:#A6ACCD;"> 			</span><span style="color:#676E95;font-style:italic;">// &quot;10function(){}&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined,</span><span style="color:#A6ACCD;"> 			</span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">    [] </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 					</span><span style="color:#676E95;font-style:italic;">// -5</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">6</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 					</span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 				</span><span style="color:#676E95;font-style:italic;">// 0 % 1 === 0</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 				</span><span style="color:#676E95;font-style:italic;">// 1 / 7 === 0.14285714285714285</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">-</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">						</span><span style="color:#676E95;font-style:italic;">//NaN-NaN=NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 				</span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">+undefined,</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">//NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">+null,</span><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">//1</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">6</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">//&#39;36&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">//&#39;2&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">+{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">//&#39;2[object Object]&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">+{},</span><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">//&#39;3[object Object]&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{}+</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">//&#39;[object Object]3&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 逗号运算符 输出括号最后一个</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">//1 2 3</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">((</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//3</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="两边发生的隐式转换" tabindex="-1">== 两边发生的隐式转换 <a class="header-anchor" href="#两边发生的隐式转换" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	为什么&#39;12&#39; == 12?我们知道等于true，但是其中的原理是什么?</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	1、当==号两边都是原始数据类型的时候，两边都会隐式转换为数字Number(mix)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">12</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">!!NaN</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	2、如果==两边有一边出现对象，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    [</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    [] </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    [</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1,a,3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    [] </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    [</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="逗号运算符" tabindex="-1">逗号运算符 <a class="header-anchor" href="#逗号运算符" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">((</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 题目：</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fn</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">++,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">++,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fn</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> c </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fn</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> c)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 解释：</span></span>
<span class="line"></span></code></pre></div><blockquote><p><strong>引用：</strong></p><ul><li><a href="https://mp.weixin.qq.com/s/_THIZY4KTa1IlVb4k9qbJg" target="_blank" rel="noreferrer">经常被面试官考的JavaScript数据类型知识你真的懂吗？</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf" target="_blank" rel="noreferrer">MDN</a></li></ul></blockquote>`,56),t=[p];function e(c,r,y,D,C,A){return a(),n("div",null,t)}const d=s(o,[["render",e]]);export{F as __pageData,d as default};
